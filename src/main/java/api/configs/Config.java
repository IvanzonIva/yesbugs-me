package api.configs;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

public class Config {
    private static final Config INSTANCE = new Config();
    private final Properties properties = new Properties();

    private Config() {
        try(InputStream input = getClass()
                .getClassLoader()
                .getResourceAsStream("config.properties")) {
            if (input == null) {
                System.err.println("‚ùå config.properties not found in resources");
                throw new RuntimeException("config.properties not found in resources");
            }
            properties.load(input);
            System.out.println("‚úÖ config.properties loaded successfully: " + properties);
        } catch (IOException e) {
            System.err.println("‚ùå Failed to load config.properties: " + e.getMessage());
            throw new RuntimeException("Fail to load config.properties", e);
        }
    }

    public static String getProperty(String key) {
        //–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1 - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º—ã baseApiUrl =...
        String systemValue = System.getProperty(key);

        if (systemValue != null) {
            System.out.println("üîß Using system property '" + key + "': " + systemValue);
            return systemValue;
        }

        //–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2 - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è baseApi - BASEAPIURL
        //–ï—Å–ª–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–∏—Å—É—Ç–≤—É—Ç—é—Ç —Ç–æ—á–∫–∏, —Ç–æ –±—É–¥–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å –Ω–∏–∂–Ω–∏–º –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–º
        String envKey = key.toUpperCase().replace('.','_');
        String envValue = System.getenv(envKey);

        if (envValue != null) {
            System.out.println("üîß Using environment variable '" + envKey + "': " + envValue);
            return envValue;
        }

        //–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3 - config.properties
        String value = INSTANCE.properties.getProperty(key);
        System.out.println("üîß Getting property '" + key + "': " + value);
        return value;
    }
}