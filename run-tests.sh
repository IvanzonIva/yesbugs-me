#!/bin/bash

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
IMAGE_NAME="nbank-tests"
TEST_PROFILE=${1:-api-tests}
TIMESTAMP=$(date +"%Y%m%d_%H%M")
TEST_OUTPUT_DIR="./test-output/$TIMESTAMP"

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (—Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π)
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤ (—Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π)..."
find ./test-output -type d -mtime +3 -exec rm -rf {} + 2>/dev/null || true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    exit 1
fi

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
echo "üöÄ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
docker build -t $IMAGE_NAME . || {
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–∞"
    exit 1
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
mkdir -p "$TEST_OUTPUT_DIR/logs"
mkdir -p "$TEST_OUTPUT_DIR/results"
mkdir -p "$TEST_OUTPUT_DIR/report"

echo "üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $TEST_OUTPUT_DIR"
echo "   - logs/ (–ª–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)"
echo "   - results/ (–æ—Ç—á–µ—Ç—ã surefire)"
echo "   - report/ (HTML –æ—Ç—á–µ—Ç—ã)"

# –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º: $TEST_PROFILE"
echo "üîó API: http://192.168.1.11:4111"
echo "üîó UI: http://192.168.1.11:3000"

docker run --rm \
  -v "$TEST_OUTPUT_DIR/logs":/app/logs \
  -v "$TEST_OUTPUT_DIR/results":/app/target/surefire-reports \
  -v "$TEST_OUTPUT_DIR/report":/app/target/site \
  -e TEST_PROFILE="$TEST_PROFILE" \
  -e APIBASEURL="http://192.168.1.11:4111" \
  -e UIBASEURL="http://192.168.1.11:3000" \
  $IMAGE_NAME

EXIT_CODE=$?

echo " "
echo "üìä –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo " "
echo "üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"

if [ -f "$TEST_OUTPUT_DIR/logs/run.log" ]; then
    echo "‚úÖ –õ–æ–≥–∏: $TEST_OUTPUT_DIR/logs/run.log"
    # –ü–æ–∫–∞–∂–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    echo "   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞:"
    tail -5 "$TEST_OUTPUT_DIR/logs/run.log" | sed 's/^/   > /'
else
    echo "‚ùå –õ–æ–≥–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
fi

if [ -d "$TEST_OUTPUT_DIR/results" ] && [ "$(ls -A "$TEST_OUTPUT_DIR/results")" ]; then
    echo "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: $TEST_OUTPUT_DIR/results"
    # –ü–æ–∫–∞–∂–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    COUNT=$(find "$TEST_OUTPUT_DIR/results" -name "*.xml" -o -name "*.txt" | wc -l)
    echo "   –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $COUNT"
else
    echo "‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
fi

if [ -d "$TEST_OUTPUT_DIR/report" ] && [ "$(ls -A "$TEST_OUTPUT_DIR/report")" ]; then
    echo "‚úÖ –û—Ç—á–µ—Ç: $TEST_OUTPUT_DIR/report"
    if [ -f "$TEST_OUTPUT_DIR/report/surefire-report.html" ]; then
        echo "   HTML –æ—Ç—á–µ—Ç: $TEST_OUTPUT_DIR/report/surefire-report.html"
    fi
else
    echo "‚ùå HTML –æ—Ç—á–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω"
fi

# –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
if [ -d "$TEST_OUTPUT_DIR/results" ]; then
    echo " "
    echo "üìà –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    find "$TEST_OUTPUT_DIR/results" -name "*.txt" -exec grep -l "Tests run:" {} \; | head -3 | while read file; do
        echo "   $(basename "$file"): $(grep "Tests run:" "$file")"
    done
fi

echo " "
if [ $EXIT_CODE -eq 0 ]; then
    echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —Å –æ—à–∏–±–∫–∞–º–∏ (–∫–æ–¥: $EXIT_CODE)"
fi

exit $EXIT_CODE