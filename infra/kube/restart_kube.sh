#!/bin/bash

echo "=================================================="
echo "üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í–û–ì–û KUBERNETES –û–ö–†–£–ñ–ï–ù–ò–Ø"
echo "=================================================="

# –®–ê–ì 1: –ø–æ–¥–Ω—è—Ç–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo ""
echo "üîß –®–ê–ì 1: –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø"
echo "--------------------------------------------------"

echo "üì¶ –ó–∞–ø—É—Å–∫–∞–µ–º Minikube –∫–ª–∞—Å—Ç–µ—Ä..."
minikube start --driver=docker
echo "‚úÖ Minikube —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"

echo "üìÅ –°–æ–∑–¥–∞–µ–º ConfigMap –¥–ª—è Selenoid..."
kubectl create configmap selenoid-config --from-file=browsers.json=./nbank-chart/files/browsers.json --dry-run=client -o yaml | kubectl apply -f -
echo "‚úÖ ConfigMap 'selenoid-config' —Å–æ–∑–¥–∞–Ω"

echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Helm —á–∞—Ä—Ç nbank..."
helm uninstall nbank 2>/dev/null || true
sleep 5
helm install nbank ./nbank-chart
echo "‚úÖ Helm —á–∞—Ä—Ç 'nbank' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo "‚è≥ –û–∂–∏–¥–∞–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–¥–æ–≤..."
sleep 30

echo ""
echo "üìä –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í:"
kubectl get svc

echo ""
echo "üê≥ –°–¢–ê–¢–£–° PODS:"
kubectl get pods

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
echo ""
echo "üîß –ü–†–û–í–ï–†–Ø–ï–ú FRONTEND..."
if kubectl get pods 2>/dev/null | grep -q "CrashLoopBackOff"; then
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º frontend..."
    kubectl delete pod -l app=frontend
    echo "‚è≥ –ñ–¥–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞..."
    sleep 30
    kubectl get pods -l app=frontend
fi

echo ""
echo "üìù –õ–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏):"
kubectl logs deployment/backend --tail=10

# –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo ""
echo "üîå –ó–ê–ü–£–°–ö –ü–†–û–ë–†–û–°–ê –ü–û–†–¢–û–í –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø"
echo "--------------------------------------------------"

pkill -f "kubectl port-forward" || true
sleep 2

echo "üåê Frontend:    http://localhost:3000"
kubectl port-forward svc/frontend 3000:80 &
echo "üîß Backend:     http://localhost:4111"
kubectl port-forward svc/backend 4111:4111 &
echo "ü§ñ Selenoid:    http://localhost:4444"
kubectl port-forward svc/selenoid 4444:4444 &
echo "üìä Selenoid UI: http://localhost:8080"
kubectl port-forward svc/selenoid-ui 8080:8080 &

sleep 5

# –®–ê–ì 2: –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
echo ""
echo "üìä –®–ê–ì 2: –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê"
echo "--------------------------------------------------"

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts || true
helm repo add elastic https://helm.elastic.co || true
helm repo update

helm uninstall monitoring -n monitoring 2>/dev/null || true
sleep 5

helm upgrade --install monitoring prometheus-community/kube-prometheus-stack -n monitoring --create-namespace -f monitoring-values.yaml
echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo "‚è≥ –û–∂–∏–¥–∞–µ–º 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞..."
sleep 60

echo ""
echo "üîå –ü–†–û–ë–†–û–° –ü–û–†–¢–û–í –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê"
echo "--------------------------------------------------"
echo "üìà Prometheus:  http://localhost:3001"
kubectl port-forward svc/monitoring-kube-prometheus-prometheus -n monitoring 3001:9090 &
echo "üìä Grafana:     http://localhost:3002"
kubectl port-forward svc/monitoring-grafana -n monitoring 3002:80 &

sleep 10

echo ""
echo "üîê –ù–ê–°–¢–†–û–ô–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò"
echo "--------------------------------------------------"
kubectl create secret generic backend-basic-auth --from-literal=username=admin --from-literal=password=admin -n monitoring --dry-run=client -o yaml | kubectl apply -f -
kubectl apply -f spring-monitoring.yaml
echo "‚úÖ Spring Monitoring –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –®–ê–ì 3: –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
echo ""
echo "üí° –õ–û–ì–ò–†–û–í–ê–ù–ò–ï (Elasticsearch + Kibana)"
echo "--------------------------------------------------"

kubectl delete namespace logging 2>/dev/null || true
kubectl create namespace logging
sleep 3

helm repo add elastic https://helm.elastic.co || true
helm repo update

echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Elasticsearch..."
helm upgrade --install elasticsearch elastic/elasticsearch -n logging \
  --version 7.17.3 \
  --set replicas=1 \
  --set minimumMasterNodes=1 \
  --set persistence.enabled=false \
  --set resources.requests.memory="512Mi" \
  --set resources.limits.memory="1Gi"

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ elasticsearch
echo "‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Elasticsearch..."
kubectl wait --for=condition=ready pod -l app=elasticsearch-master -n logging --timeout=180s

echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Kibana..."
helm upgrade --install kibana elastic/kibana -n logging \
  --version 7.17.3 \
  --set image.repository=docker.elastic.co/kibana/kibana \
  --set image.tag=7.17.3 \
  --set resources.requests.memory="256Mi" \
  --set resources.limits.memory="512Mi" \
  --set service.type=ClusterIP \
  --set elasticsearchHosts="http://elasticsearch-master.logging.svc.cluster.local:9200"

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–∏–±–∞–Ω—ã
echo "‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Kibana..."
kubectl wait --for=condition=ready pod -l app=kibana -n logging --timeout=180s

# –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–∞ Kibana
echo "üìÑ Kibana:      http://localhost:5601"
kubectl port-forward svc/kibana-kibana -n logging 5601:5601 &

echo ""
echo "=================================================="
echo "üéØ –í–°–ï –°–ï–†–í–ò–°–´ –ó–ê–ü–£–©–ï–ù–´!"
echo "=================================================="
echo "üåê –ü–†–ò–õ–û–ñ–ï–ù–ò–ï:"
echo "   Frontend:    http://localhost:3000"
echo "   Backend:     http://localhost:4111"
echo "   Selenoid:    http://localhost:4444"
echo "   Selenoid UI: http://localhost:8080"
echo ""
echo "üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì:"
echo "   Prometheus:  http://localhost:3001"
echo "   Grafana:     http://localhost:3002"
echo ""
echo "üìÑ –õ–û–ì–ò–†–û–í–ê–ù–ò–ï:"
echo "   Kibana:      http://localhost:5601"
echo ""
echo "‚öôÔ∏è  –ö–û–ú–ê–ù–î–´:"
echo "   kubectl get pods -A         # —Å—Ç–∞—Ç—É—Å –ø–æ–¥–æ–≤"
echo "   kubectl get svc -A          # —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "   kubectl logs -f <pod> -n ns # –ª–æ–≥–∏ –ø–æ–¥–∞"
echo ""
echo "üõë –û–°–¢–ê–ù–û–í–ö–ê: pkill -f 'kubectl port-forward'"
echo "=================================================="
